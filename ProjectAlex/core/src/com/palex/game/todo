todo list


Factories
-My item factory will create an item every time that is required and add it to its list of items which can be accessed by itemID (later on it will be beneficial to be able to remove an item)
-will be able to create predefined items (resources, special items, quest items)
-My agent factory will create an agent when required and add it to the agent list (later on it will be beneficial to be able to remove an agent)
-will be able to create predefined agents (bosses, player etc)
-Generation of items comes from some enemy agent parameters and player parameters
-Generation of agents from some region list of enemies, player parameters

In Agent
-setters for stats, maybe incrementer don't forgot "normal" types
-implement equip / unequip (after Equipment and weapon item classes are implemented)
-add methods that deal will equipment inventory skills

EquipmentSlots class
-needs all relevant methods after item classes and consequential classes implemented

Item classes
-make Item class
-make EquipmentItem class (can be equipped to only a certain type of slot)
-make WeaponItem class (a weapon is a piece of equipment which has skill)
-make ResourceItem class (basically just have value and can be sold)
-make UsableItem class (has some sort of effect on stats)

Skill class
-attack method will go in Agent some switch statement, work out how to start attack, then get input some time later, then calculate, and update Agents (maybe set some flag(s) in the battle manager)
-are different classes needed for different skill types, meybz not

Factories
-make a skill factory class which has all skill (can get reference by id)
-make an item factory class which has all items (can get reference by id)

Managers
-make a battle manager (start)

Input Handler